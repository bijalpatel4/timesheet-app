{"version":3,"sources":["images/logo.png","components/showMessage.jsx","components/timesheet/inputWeeklyHours.jsx","components/timesheet/timesheetTable.jsx","services/loginService.js","data/taskData.js","services/tasksService.js","components/timesheet/addTimesheetRowBySelectingTask.jsx","components/timesheet/timesheet.jsx","components/forms&Inputs/input.jsx","components/forms&Inputs/form.jsx","components/login/loginForm.jsx","components/registration/registrationForm.jsx","components/logout/logout.jsx","components/nav/navBar.jsx","components/admin/admin.jsx","timeSheetApp.js","serviceWorker.js","index.js"],"names":["module","exports","ShowMessage","style","textAlign","margin","InputWeekHours","props","handleChange","e","inputvalue","target","value","id","weekDays","state","days","map","day","parseInt","setState","total","getTotal","reduce","acc","curr","bind","this","width","height","Fragment","key","onChange","type","Component","TimesheetTable","Date","week","i","first","getDate","getDay","setDate","toISOString","slice","push","className","dayName","index","date","projects","project","projectId","onClick","onDelete","description","to","usersData","username","password","firstname","lastname","employeeId","managerName","isAdmin","getUserFromLocalStorage","localStorage","getItem","JSON","parse","tasks","taskId","taskDescription","getProjects","console","log","AddTimesheetRowBySelectingTask","handleOnChange","addrow","task","stringify","Timesheet","selectedProject","deleteRow","removeProject","filter","currentUser","padding","float","window","location","Input","name","label","error","rest","htmlFor","Form","data","errors","validate","Joi","schema","abortEarly","details","item","path","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","input","currentTarget","errorMessage","disabled","LoginForm","string","required","user","find","setItem","onSubmit","renderInput","renderButton","RegistrationForm","email","min","Logout","removeItem","NavBar","src","Logo","alt","Admin","TimeSheetApp","component","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d8c3cc7c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8c822da7.png\";","import React from \"react\";\n\nvar ShowMessage = () => {\n  return (\n    <div>\n      <h1 style={{ textAlign: \"center\", margin: \"10%\" }}>\n        Your Timesheet has been submitted\n      </h1>\n    </div>\n  );\n};\n\nexport default ShowMessage;\n","import React, { Component } from \"react\";\n\nclass InputWeekHours extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { days: props.days, total: props.total };\n    this.getTotal = this.getTotal.bind(this);\n  }\n\n  handleChange = e => {\n    const inputvalue = e.target.value;\n    const id = e.target.id;\n    var weekDays = this.state.days.map(day =>\n      day.id === +id ? { ...day, value: parseInt(inputvalue) } : day\n    );\n\n    this.setState({\n      days: weekDays,\n      total: this.getTotal(weekDays)\n    });\n\n    //const weekDay = this.state.days.find(day => day.id === e.target.id);\n  };\n  getTotal = weekDays => {\n    const total = weekDays.reduce((acc, curr) => acc + curr.value, 0);\n    return total;\n  };\n  render() {\n    const { days } = this.props;\n    const { total } = this.state;\n    const style = { width: \"60px\", height: \"50px\", textAlign: \"right\" };\n    return (\n      <React.Fragment>\n        <td></td>\n        {days.map(day => (\n          <td key={day.id}>\n            <input\n              onChange={this.handleChange}\n              type=\"text\"\n              id={day.id}\n              //value={day.value}\n              style={style}\n            />\n          </td>\n        ))}\n        <td></td>\n        <td></td>\n        <td>{total}</td>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default InputWeekHours;\n","import React, { Component } from \"react\";\nimport InputWeekHours from \"./inputWeeklyHours\";\n// import Total from \"./total\";\n//import { Link } from \"react-router-dom\";\n//import ShowMessage from \"./showMessage\";\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\nimport \"../css/timeSheetForm.css\";\n\nclass TimesheetTable extends Component {\n  render() {\n    var daysNames = [\"\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n    let curr = new Date();\n    let week = [];\n    week[0] = \"\";\n    for (let i = 1; i <= 7; i++) {\n      let first = curr.getDate() - curr.getDay() + i;\n      let day = new Date(curr.setDate(first)).toISOString().slice(0, 10);\n      week.push(day);\n    }\n    return (\n      <div>\n        <div>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>Project</th>\n                <th>Description</th>\n                {daysNames.map((dayName, index) => (\n                  <th key={index}>{dayName}</th>\n                ))}\n                <th>Total</th>\n              </tr>\n              <tr>\n                <th></th>\n                <th></th>\n                <th></th>\n                {week.map((date, index) => (\n                  <th key={index}>{date}</th>\n                ))}\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.props.projects.map(project => (\n                <tr key={project.projectId}>\n                  <th>\n                    <button\n                      className=\"btn btn-danger btn-sm\"\n                      onClick={() => this.props.onDelete(project.projectId)}\n                    >\n                      X\n                    </button>\n                  </th>\n                  <td>{project.projectId}</td>\n                  <td>{project.description}</td>\n                  <InputWeekHours days={project.days} total={project.total} />\n                </tr>\n              ))}\n              {/* <tr>\n                <td></td>\n                <td></td>\n                <td>Total</td>\n                <Total projects={this.props.projects} />\n              </tr> */}\n            </tbody>\n          </table>\n          <NavLink\n            to=\"/showMessage\"\n            className=\"btn btn-success btn-lg float-right\"\n          >\n            Submit\n          </NavLink>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimesheetTable;\n","var usersData = [\n  {\n    username: \"bijalpatel8@gmail.com\",\n    password: \"12345\",\n    firstname: \"Bijal\",\n    lastname: \"Patel\",\n    employeeId: \"856733\",\n    managerName: \"Suresh\",\n    isAdmin: false\n  },\n  {\n    username: \"paraspatel89@gmail.com\",\n    password: \"56789\",\n    firstname: \"paras\",\n    lastname: \"patel\",\n    employeeId: \"856352\",\n    managerName: \"Suresh\",\n    isAdmin: false\n  },\n  {\n    username: \"admin@admin.com\",\n    password: \"admin\",\n    firstname: \"admin\",\n    lastname: \"patel\",\n    employeeId: \"342345\",\n    managerName: \"Amif\",\n    isAdmin: true\n  }\n];\n\nexport function login(username, password, isAdmin) {\n  console.log(\"Total user\", usersData);\n  const user = usersData.find(function(user) {\n    return user.username === username && user.password === password;\n  });\n  return user;\n}\n\nexport default function register(user) {\n  usersData.push(user);\n  console.log(\"After adiing user\", usersData);\n}\n\nexport function getUserFromLocalStorage() {\n  if (localStorage.getItem(\"user\") != null) {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n  return null;\n}\n","const tasks = [\n  {\n    taskId: 12345,\n    taskDescription: \"testing\"\n  },\n  {\n    taskId: 67891,\n    taskDescription: \"coding\"\n  },\n  {\n    taskId: 23456,\n    taskDescription: \"meeting\"\n  }\n];\n\nexport default tasks;\n","import tasks from \"../data/taskData\";\n\nconst getProjects = () => {\n  console.log(tasks);\n  return tasks;\n};\n\nexport default getProjects;\n","import React from \"react\";\nimport getProjects from \"../../services/tasksService\";\n\nconst AddTimesheetRowBySelectingTask = ({ handleOnChange, addrow }) => {\n  return (\n    <div className=\"input-group\">\n      <select onChange={handleOnChange} className=\"select-option\">\n        <option value=\"#\"> Select task</option>\n        {getProjects().map((task, index) => (\n          <option value={JSON.stringify(task)} key={index}>\n            {task.taskId}\n          </option>\n        ))}\n      </select>\n      <button onClick={addrow} className=\"btn btn-primary btn-sm\">\n        {\" \"}\n        ADD{\" \"}\n      </button>\n    </div>\n  );\n};\n\nexport default AddTimesheetRowBySelectingTask;\n","import React, { Component } from \"react\";\nimport TimesheetTable from \"./timesheetTable\";\nimport \"../css/projects.css\";\nimport { getUserFromLocalStorage } from \"../../services/loginService\";\nimport AddTimesheetRowBySelectingTask from \"./addTimesheetRowBySelectingTask\";\n\nclass Timesheet extends Component {\n  state = {\n    projects: []\n  };\n\n  selectedProject = \"#\";\n\n  addrow = () => {\n    if (this.selectedProject === \"#\") {\n      return;\n    }\n    const projects = this.state.projects;\n    var project = {\n      projectId: this.selectedProject.taskId,\n      description: this.selectedProject.taskDescription,\n      days: [\n        { id: 1, value: 0 },\n        { id: 2, value: 0 },\n        { id: 3, value: 0 },\n        { id: 4, value: 0 },\n        { id: 5, value: 0 },\n        { id: 6, value: 0 },\n        { id: 7, value: 0 }\n      ],\n      total: 0\n    };\n    projects.push(project);\n    this.setState({ projects });\n  };\n\n  handleChange = e => {\n    let value = e.target.value;\n    if (value === \"#\") {\n      this.selectedProject = \"#\";\n      return;\n    }\n    this.selectedProject = JSON.parse(value);\n  };\n\n  deleteRow = projectId => {\n    const removeProject = this.state.projects.filter(\n      project => project.projectId !== projectId\n    );\n    this.setState({ projects: removeProject });\n    console.log(\"deleted\");\n  };\n\n  render() {\n    const currentUser = getUserFromLocalStorage();\n    if (!currentUser) {\n      window.location = \"/\";\n      return null;\n    }\n    return (\n      <div className=\"Projects\">\n        <div>\n          <h1 style={{ textAlign: \"center\", margin: \"4%\" }}>\n            Employee Timesheet\n          </h1>\n        </div>\n        <div>\n          <div className=\"timesheet\">\n            <div>\n              <div style={{ padding: \"1%\" }}>\n                <h1 style={{ float: \"left\" }}>\n                  {currentUser.firstname} {currentUser.lastname} (\n                  {currentUser.employeeId})\n                </h1>\n                <h2 style={{ float: \"right\" }}>\n                  Manager: {currentUser.managerName}\n                </h2>\n              </div>\n              <AddTimesheetRowBySelectingTask\n                handleOnChange={this.handleChange}\n                addrow={this.addrow}\n              />\n\n              <TimesheetTable\n                projects={this.state.projects}\n                days={this.state.projects.days}\n                total={this.state.projects.total}\n                onDelete={this.deleteRow}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Timesheet;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"./input\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {}\n  };\n  validate = () => {\n    const options = {\n      abortEarly: false\n    };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n\n    this.doSubmit();\n  };\n  handleOnChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button\n        disabled={this.validate()}\n        className=\"btn btn-info btn-block text-center my-4 p-2 \"\n      >\n        {label}\n      </button>\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        label={label}\n        value={data[name]}\n        onChange={this.handleOnChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport \"../css/login.css\";\nimport Joi from \"joi-browser\";\nimport Form from \"../forms&Inputs/form\";\nimport { login } from \"../../services/loginService\";\nimport { Link } from \"react-router-dom\";\n\nclass LoginForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\"\n    },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .label(\"Password\")\n  };\n\n  doSubmit = () => {\n    const { data } = this.state;\n    const user = login(data.username, data.password);\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    window.location = \"/projects\";\n  };\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        <form\n          style={{ width: \"90%\" }}\n          onSubmit={this.handleSubmit}\n          className=\"bg-light border border-light p-5 m-5\"\n        >\n          <h1>Login</h1>\n          {this.renderInput(\"username\", \"username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n          <p>\n            Not a member? <Link to=\"/registration\">Register</Link>\n          </p>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport register from \"../../services/loginService\";\nimport Joi from \"joi-browser\";\nimport Form from \"../forms&Inputs/form\";\nimport { Link } from \"react-router-dom\";\n\nclass RegistrationForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      employeeId: \"\",\n      managerName: \"\"\n    },\n    errors: {}\n  };\n\n  schema = {\n    username: Joi.string()\n      .required()\n      .email()\n      .label(\"Username\"),\n    password: Joi.string()\n      .required()\n      .min(5)\n      .label(\"Password\"),\n    firstname: Joi.string()\n      .required()\n      .label(\"Firstname\"),\n    lastname: Joi.string()\n      .required()\n      .label(\"Lastname\"),\n    employeeId: Joi.string()\n      .required()\n      .label(\"employeeId\"),\n    managerName: Joi.string()\n      .required()\n      .label(\"managerName\")\n  };\n\n  doSubmit = () => {\n    console.log(this.state.data);\n    register(this.state.data);\n    // localStorage.setItem(\"user\", JSON.stringify(this.state.data));\n    //window.location = \"/\";\n  };\n  render() {\n    return (\n      <div className=\"loginForm\">\n        <form\n          style={{ width: \"90%\" }}\n          onSubmit={this.handleSubmit}\n          className=\"bg-light border border-light p-5 m-5\"\n        >\n          <h1>Register</h1>\n          {this.renderInput(\"username\", \"username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderInput(\"firstname\", \"Firstname\")}\n          {this.renderInput(\"lastname\", \"Lastname\")}\n          {this.renderInput(\"employeeId\", \"EmployeeId\")}\n          {this.renderInput(\"managerName\", \"Manager\")}\n          {this.renderButton(\"Register\")}\n          <div className=\"hint-text\">\n            Already have an account? <Link to=\"/\">Login here</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegistrationForm;\n","import { Component } from \"react\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    const log = localStorage.removeItem(\"user\");\n    console.log(log);\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\";\nimport Logo from \"../../images/logo.png\";\nimport \"../css/navbar.css\";\n\nconst NavBar = props => {\n  return (\n    <div>\n      <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n        <div className=\"my-0 mr-md-auto font-weight-normal\">\n          <img src={Logo} alt=\"logo\" />\n        </div>\n        {/* \n        {!props.currentUser && (\n          <React.Fragment>\n            <NavLink\n              className=\"btn btn-outline-primary mr-5\"\n              to=\"/registration\"\n            >\n              Registration\n            </NavLink>\n          </React.Fragment>\n        )} */}\n        {props.currentUser && (\n          <React.Fragment>\n            <NavLink className=\"btn btn-dark btn-circle btn-xl\" to=\"#\">\n              {props.currentUser.firstname}\n            </NavLink>\n            <NavLink className=\"btn btn-primary btn-logout btn-xl\" to=\"/logout\">\n              Log Out\n            </NavLink>\n          </React.Fragment>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst Admin = () => {\n  return (\n    <div>\n      <h1>Admin</h1>\n    </div>\n  );\n};\n\nexport default Admin;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ShowMessage from \"./components/showMessage\";\nimport Timesheet from \"./components/timesheet/timesheet\";\nimport LoginForm from \"./components/login/loginForm\";\nimport RegistrationForm from \"./components/registration/registrationForm\";\nimport Logout from \"./components/logout/logout\";\nimport NavBar from \"./components/nav/navBar\";\nimport Admin from \"./components/admin/admin\";\nimport { getUserFromLocalStorage } from \"./services/loginService\";\n// import Home from \"./components/home\";\n\nclass TimeSheetApp extends Component {\n  state = {};\n\n  componentDidMount() {\n    this.setState({ currentUser: getUserFromLocalStorage() });\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar currentUser={this.state.currentUser} />\n        <div className=\"container\">\n          <Switch>\n            <Route path=\"/registration\" component={RegistrationForm} />\n            <Route path=\"/showMessage\" component={ShowMessage} />\n            <Route path=\"/projects\" component={Timesheet} />\n            <Route path=\"/admin\" component={Admin} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/\" component={LoginForm} />\n          </Switch>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default TimeSheetApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TimeSheetApp from \"./timeSheetApp\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <TimeSheetApp />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}